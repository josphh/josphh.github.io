@layer reset {
  /*
    Modified CSS reset, originally by Eric A. Meyer
    https://meyerweb.com/eric/tools/css/reset/
  */

  html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr,
  acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong,
  sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table,
  caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed,  figure,
  figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio,
  video, button, input {
    margin: 0;
    padding: 0;
    border: none;
    border-style: none;
    outline: none;
    font-size: 1rem;
    font: inherit;
    vertical-align: baseline;
    text-decoration: none;
    box-sizing: border-box;
  }

  /* HTML5 display-role reset for older browsers */
  article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
    display: block;
  }

  body {
    line-height: 1;
  }

  ol, ul {
    list-style: none;
  }

  table {
    border-collapse: collapse;
    border-spacing: 0;
  }
}

@layer elements {
  body {
    width: 100vw;
    height: 100vh;
    color: var(--base05);
    background-color: var(--base01);
    font-family: sans-serif;
  }

  body > * {
    background-color: var(--base00);
    border: var(--border);
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow) inset;
  }

  h1 {
    font-size: 1.5rem;
    font-weight: bold;
  }

  a, button {
    cursor: pointer;
  }

  a:not(.button) {
    color: var(--base0D);
    text-decoration: underline;
  }

  a:not(.button):hover, a:not(.button):active {
    color: rgb(from var(--base0D) r g b / var(--hover-opacity));
  }

  a:not(.button):focus-visible {
    outline: var(--border);
    outline-color: var(--base0D);
    outline-offet: -1px;
  }

  a.button, button, input {
    display: inline-block;
    padding: var(--input-padding);
    color: var(--base05);
    background-color: var(--base01);
    border: var(--border);
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
  }

  a.button:active, button:active,
  a.button:hover, button:hover, input:hover {
    background-color: rgb(from var(--base01) r g b / var(--hover-opacity));
  }

  a.button:active, button:active,
  a.button:focus-visible, button:focus-visible, input:focus-visible {
    border-color: var(--base0D);
  }

  .icon {
    display: inline-block;
    width: 24px;
    height: 24px;
    flex-shrink: 0;
    background-color: var(--base05);
    -webkit-mask-image: var(--icon);
    mask-image: var(--icon);
    -webkit-mask-size: cover;
    mask-size: cover;
  }

  a:not(.button) .icon {
    background-color: var(--base0D);
  }

  a:not(.button):hover .icon, a:not(.button):active .icon {
    background-color: rgb(from var(--base0D) r g b / var(--hover-opacity));
  }
}

@layer layout {
  .horizontal, .vertical, .long-edge, .short-edge {
    display: flex;
  }

  .horizontal {
    flex-direction: row;
  }

  .vertical {
    flex-direction: column;
  }

  @media (orientation: portrait) {
    .long-edge {
      flex-direction: column;
    }

    .short-edge {
      flex-direction: row;
    }
  }

  @media (orientation: landscape) {
    .long-edge {
      flex-direction: row;
    }

    .short-edge {
      flex-direction: column;
    }
  }

  .spaced-large {
    gap: var(--spacing-large);
  }

  .spaced-small {
    gap: var(--spacing-small);
  }

  .padded {
    padding: var(--spacing-large);
  }

  .separated > *:not(:last-child) {
    border-bottom: 1px solid var(--base01);
  }

  .centered-items {
    align-items: center;
  }

  .centered-content {
    justify-content: center;
  }

  .centered-text {
    text-align: center;
  }

  .wrap {
    flex-wrap: wrap;
    align-content: start;
  }

  .scroll {
    min-width: 0;
    min-height: 0;
    overflow: scroll;
    scrollbar-color: var(--base05) transparent;
  }

  .scroll > * {
    min-width: fit-content;
    min-height: fit-content;
  }

  .grow {
    flex-grow: 1;
  }

  .fixed-width {
    width: min(100%, 50em);
  }
}

@layer progress-bar {
  #progress-container:empty {
    display: none;
  }

  .progress {
    min-height: 1rem;
    min-width: 10rem;
    flex-grow: 1;

    border-radius: var(--border-radius);
    overflow: hidden;

    display: flex;
    flex-direction: row-reverse;
    align-items: stretch;
    justify-content: start;
  }

  .progress > div {
    transition: width 0.1s;
  }

  .progress-none {
    background-color: var(--base08);
  }

  .progress-sent {
    background-color: var(--base0A);
  }

  .progress-confirmed {
    background-color: var(--base0B);
  }
}

:root {
  --base00: #fdf9f5;
  --base01: #f9f5f1;
  --base02: #ffeada;
  --base03: #5a5a5a;
  --base04: #404040;
  --base05: #292929;
  --base06: #181818;
  --base07: #000000;
  --base08: #ac1f35;
  --base09: #ad5601;
  --base0A: #645a00;
  --base0B: #0c680c;
  --base0C: #01716f;
  --base0D: #0158ad;
  --base0E: #6645c2;
  --base0F: #a81a66;
  --spacing-large: 1.75rem;
  --spacing-small: 0.75rem;
  --input-padding: 0.75rem 1rem;
  --border-radius: 0.75rem;
  --border: 1px solid var(--base02);
  --box-shadow: 0 0 4px -1px rgb(from var(--base05) r g b / 0.2);
  --hover-opacity: 0.75;
}
